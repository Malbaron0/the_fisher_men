{"version":3,"sources":["css/images sync /^/.*$","css/images/anchor.svg","css/images/halibut.jpg","css/images/king crab.png","css/images/lobster.jpg","css/images/mahi.jpg","css/images/mussels.jpg","css/images/oyster.jpg","css/images/pacific_halibut.jpg","css/images/prawns.jpg","css/images/salmon.jpg","css/images/scallops.jpg","helpers.js","components/StorePicker.js","components/Order.js","components/Header.js","components/FishForm.js","components/Inventory.js","components/Fish.js","components/App.js","index.js","sample-fishes.js"],"names":["map","./anchor.svg","./halibut.jpg","./king crab.png","./lobster.jpg","./mahi.jpg","./mussels.jpg","./oyster.jpg","./pacific_halibut.jpg","./prawns.jpg","./salmon.jpg","./scallops.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","formatPrice","cents","concat","toFixed","replace","rando","arr","Math","floor","random","length","getFunName","adjectives","React","Component","Order","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sad","react_default","a","createElement","className","renderOrder","bind","assertThisInitialized","key","_this2","fish","props","fishies","count","order","removeButton","onClick","removeOrder","status","name","price","_this3","_this$props","orderIds","total","reduce","prev","isEmpty","constructor","react_addons_css_transition_group_default","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Header","tagline","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","totalCount","components_Order","addTotalCount","FishForm","createFish","event","preventDefault","console","log","value","desc","image","addFish","fisForm","reset","ref","input","onSubmit","placeholder","Fish","details","keyIndex","addToOrder","isAvaliable","buttonText","require","src","alt","disabled","App","loadSamples","setState","sampleFishes","amount","state","removeFish","nextProps","nextState","objectSpread","amountToRemove","fishList","components_Fish","components_Header","ReactDOM","render","components_App","document","querySelector","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9"],"mappings":"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","file":"static/js/main.bf1f5493.chunk.js","sourcesContent":["var map = {\n\t\"./anchor.svg\": 207,\n\t\"./halibut.jpg\": 208,\n\t\"./king crab.png\": 209,\n\t\"./lobster.jpg\": 210,\n\t\"./mahi.jpg\": 211,\n\t\"./mussels.jpg\": 212,\n\t\"./oyster.jpg\": 213,\n\t\"./pacific_halibut.jpg\": 214,\n\t\"./prawns.jpg\": 215,\n\t\"./salmon.jpg\": 216,\n\t\"./scallops.jpg\": 217\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 206;","module.exports = __webpack_public_path__ + \"static/media/anchor.d2f8799a.svg\";","module.exports = __webpack_public_path__ + \"static/media/halibut.321c0f2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/king crab.073673e8.png\";","module.exports = __webpack_public_path__ + \"static/media/lobster.3587eee9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mahi.af647b28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mussels.71ef43c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oyster.0f99543b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pacific_halibut.59db8220.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prawns.18538535.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salmon.69bbee04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scallops.da74d973.jpg\";","export function formatPrice(cents) {\r\n    return `${(cents / 100).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`;\r\n}\r\n\r\nexport function rando(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n    return text.toString().toLowerCase()\r\n        .replace(/\\s+/g, '-')           // Replace spaces with -\r\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\r\n        .replace(/^-+/, '')             // Trim - from start of text\r\n        .replace(/-+$/, '');            // Trim - from end of text\r\n}\r\n\r\nexport function getFunName() {\r\n    const adjectives = ['adorable', 'beautiful', 'clean', 'drab', 'elegant', 'fancy', 'glamorous', 'handsome', 'long', 'magnificent', \r\n    'old-fashioned', 'plain', 'quaint', 'sparkling', 'ugliest', 'unsightly', 'angry', 'bewildered', 'clumsy', 'defeated', 'embarrassed', 'fierce', \r\n    'grumpy', 'helpless', 'itchy', 'jealous', 'lazy', 'mysterious', 'nervous', 'obnoxious', 'panicky', 'repulsive', 'scary', 'thoughtless', 'uptight', \r\n    'worried'];\r\n\r\n    const nouns = ['women', 'men', 'children', 'teeth', \r\n    'feet', 'people', 'leaves', 'mice', 'geese', 'halves', 'knives', 'wives', 'lives', 'elves', \r\n    'loaves', 'potatoes', 'tomatoes', 'cacti', 'foci', 'fungi', 'nuclei', 'syllabuses', 'analyses', \r\n    'diagnoses', 'oases', 'theses', 'crises', 'phenomena', 'criteria', 'data'];\r\n\r\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react'\r\nimport {getFunName} from './../helpers';\r\n\r\n\r\nclass StorePicker extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.gotToStore = this.gotToStore.bind(this);\r\n    }\r\n\r\n    gotToStore(event) {\r\n        event.preventDefault();\r\n        const storeId = this.storeInput.value;\r\n        this.props.history.push(`/store/${storeId}`); //navigate to the passed in path\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <form className=\"store-selector\" onSubmit={this.gotToStore}>\r\n                <h2>Please Enter A Store</h2>\r\n                <input type=\"text\" required placeholder = \"Store Name\" defaultValue = {getFunName()} ref = {input => this.storeInput = input}/>\r\n                <button type=\"submit\">Visit Store →</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport CSSTransitionGroup from 'react-addons-css-transition-group'; //easy way to perform CSS transitions and animations when a React component enters or leaves the DOM\r\n\r\nclass Order extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.renderOrder = this.renderOrder.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    renderOrder(key) {\r\n        const fish = this.props.fishies[key];\r\n        const count = this.props.order[key];\r\n        const removeButton = <i className=\"trash far fa-trash-alt\" onClick={() => this.props.removeOrder(key)}></i>\r\n\r\n        if (!fish || fish.status === 'unavailable') {\r\n            return <li key={key}>{removeButton}Sorry, {fish ? fish.name : 'fish'} is no longer available</li>\r\n        }\r\n\r\n        return (\r\n\r\n            <li key={key} className=\"order-item\">\r\n                <span>{removeButton} {count}lbs {fish.name}</span>\r\n                <span className=\"price\"><span>$</span>{formatPrice((count * fish.price))}</span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    sad = () => {\r\n        return (\r\n            <div>\r\n                Empty <i className=\"fas fa-sad-tear\"></i>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { order, fishies } = this.props;\r\n        const orderIds = Object.keys(order);\r\n        let fullCount = 0;\r\n\r\n        const total = orderIds.reduce((prev, key) => {\r\n            const fish = fishies[key];\r\n            const count = order[key];\r\n            fullCount = fullCount + count;\r\n            const isAvailable = fish && fish.status === 'available';\r\n\r\n            if (isAvailable) {\r\n                return prev + (count * fish.price || 0);\r\n            }\r\n\r\n            return prev;\r\n\r\n        }, 0);\r\n\r\n        const isEmpty = Object.keys(order).length === 0 && order.constructor === Object;\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h4>\r\n                    {isEmpty ? this.sad() : ''}\r\n                </h4>\r\n\r\n                <CSSTransitionGroup className=\"order order-style\"\r\n                    component=\"ul\"\r\n                    transitionName=\"order\"\r\n                    transitionEnterTimeout={500}\r\n                    transitionLeaveTimeout={500}>\r\n\r\n                    {orderIds.map(key => this.renderOrder(key))}\r\n                    <li className=\"total\">\r\n                        <strong>Total: <span>$</span>{formatPrice(total)}</strong>\r\n                    </li>\r\n                </CSSTransitionGroup>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n\r\n\r\nexport default Order;","import React from 'react';\r\nimport Order from './Order';\r\nimport { throws } from 'assert';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        // <header className=\"top\">\r\n        //     <h1>The fisher Men</h1>\r\n        //     <h3 className=\"tagline\"><span>{props.tagline}</span></h3>\r\n        // </header>\r\n        <nav className=\"navbar fixed-top bg-dark navbar-dark\">\r\n            <div className=\"navbar-brand\">\r\n                <header className=\"top\">\r\n                    <h2>The Fisher Men</h2>\r\n                    <h3 className=\"tagline\"><span>{props.tagline}</span></h3>\r\n                </header>\r\n            </div>\r\n            <div>\r\n            <div className=\"container\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"pull-right fas fa-shopping-cart\"></span>\r\n                </button>\r\n                <span className=\"badge badge-notify\">{props.totalCount}</span>\r\n            </div>\r\n            </div>\r\n            <div className=\"collapse  navbar-collapse\" id=\"navbarNav\">\r\n            <hr className=\"breakline\"></hr>\r\n            <hr className=\"breakline\"></hr>\r\n                <Order addTotalCount={props.addTotalCount} totalCount={props.totalCount} removeOrder={props.removeOrder} fishies={props.fishies} order={props.order} />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nclass FishForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.createFish = this.createFish.bind(this);\r\n    }\r\n    \r\n    createFish(event) {\r\n        event.preventDefault();\r\n        console.log('Making some fish');\r\n        \r\n        //this.name/price/status/desc/image are references to input elements\r\n        const fish = {\r\n            name: this.name.value,\r\n            price: this.price.value,\r\n            status: this.status.value,\r\n            desc: this.desc.value,\r\n            image: this.image.value,\r\n        }\r\n\r\n        this.props.addFish(fish);\r\n        this.fisForm.reset();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <form ref = {input => this.fisForm = input} className=\"fish-edit\" onSubmit = {this.createFish}>\r\n                <input ref = {input => this.name = input} type=\"text\" placeholder=\"Fish Name\" />\r\n                <input ref = {input => this.price = input} type=\"text\" placeholder=\"Fish Price\" />\r\n                <select ref = {input => this.status = input}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea ref = {input => this.desc = input} placeholder=\"Fish Desc\"></textarea>\r\n                <input ref = {input => this.image = input} type=\"text\" placeholder=\"Fish Image\" />\r\n                <button type=\"submit\">+ Add Item</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FishForm;","import React from 'react';\r\nimport FishForm from './FishForm';\r\n\r\nclass Inventory extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.renderInventory = this.renderInventory.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.authenticate = this.authenticate.bind(this);\r\n        this.authHandler = this.authHandler.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n            uid: null,\r\n            owner: null\r\n\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {        \r\n    //     //stackoverflow.com/a/20279485/3979621\r\n    //     base.initializedApp.firebase_.auth().onAuthStateChanged(user => {\r\n    //         if(user){\r\n    //             this.authHandler(user);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    //need to update state with this method\r\n    handleChange(e, key) {\r\n        const fish = this.props.fishies[key];\r\n\r\n        const updateFish = {\r\n            ...fish,\r\n            //change whatever changed\r\n            [e.target.name]: e.target.value\r\n        }\r\n\r\n        this.props.updateFish(key, updateFish);\r\n\r\n    }\r\n\r\n    authenticate(provider) {\r\n        // firebase.auth().signInWithPopup(provider).then(authData => {\r\n        //     this.authHandler(authData.user);\r\n        // }).catch(error => {\r\n        //     console.log(error);\r\n        // });\r\n    }\r\n\r\n    //call this callback once user has signed in successfully\r\n    authHandler(authData) {\r\n        //get all information of current store\r\n        // const storeRef = base.initializedApp.firebase_.database().ref(this.props.storeId);\r\n\r\n        // //find the store in firebase\r\n        // storeRef.once('value', (snapshot) => {\r\n        //     const data = snapshot.val() || {};\r\n\r\n        //     //clain it as your own if there is no owner\r\n        //     if (!data.owner) {\r\n        //         storeRef.set({\r\n        //             owner: authData.uid\r\n        //         });\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         uid: authData.uid,\r\n        //         owner: data.owner || authData.uid\r\n        //     })\r\n        // });\r\n\r\n    }\r\n\r\n    logout () {\r\n        // base.initializedApp.firebase_.auth().signOut().then(() => {\r\n        //     this.setState({\r\n        //         uid: null\r\n        //     })\r\n        //   }, (error) => {\r\n        //     // An error happened.\r\n        //   });\r\n    }\r\n    \r\n    renderInventory(key) {\r\n        const fish = this.props.fishies[key];\r\n        return (\r\n            <div className=\"fish-edit\" key={key}>\r\n                <input onChange={e => this.handleChange(e, key)} name=\"name\" value={fish.name} type=\"text\" placeholder=\"Fish Name\" />\r\n                <input onChange={e => this.handleChange(e, key)} name=\"price\" value={fish.price} type=\"text\" placeholder=\"Fish Price\" />\r\n                <select onChange={e => this.handleChange(e, key)} type=\"text\" name=\"status\" value={fish.status} placeholder=\"Fish Status\">\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea onChange={e => this.handleChange(e, key)} name=\"desc\"  value={fish.desc} placeholder=\"Fish Desc\"></textarea>\r\n                <input onChange={e => this.handleChange(e, key)} name=\"image\"  value={fish.image} type=\"text\" placeholder=\"Fish Image\" />\r\n                <button className=\"warning\" onClick={() => this.props.removeFish(key)}>Remove Item</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLogin() {\r\n        // return (\r\n        //     <nav className=\"login\">\r\n        //         <h2>Inventory</h2>\r\n        //         <button className=\"github\" onClick={() => this.authenticate(new firebase.auth.GithubAuthProvider())}>Log using Github</button>\r\n        //         <button className=\"facebook\" onClick={() => this.authenticate(new firebase.auth.FacebookAuthProvider())}>Log using Facebook</button>\r\n        //     </nav>\r\n        // )\r\n    }\r\n\r\n\r\n    render() {\r\n        const logout = <button onClick = {this.logout}>Log Out</button>\r\n\r\n        if (!this.state.uid) {\r\n            return <div>{this.renderLogin()}</div>\r\n        }\r\n\r\n        //check if login user is the same as the store owner. \r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner of this store</p>\r\n                    {logout}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishies).map(this.renderInventory)}\r\n                <FishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSamples}>Load Smaple Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nclass Fish extends React.Component {\r\n    render() {\r\n        const { details, keyIndex, addToOrder } = this.props;\r\n        const isAvaliable = details.status === 'available';\r\n        const buttonText = isAvaliable ? 'Add To Cart' : 'Sold out! :(';\r\n        const image = require(`../css/images/${details.image}`);\r\n        console.log(image);\r\n        return (\r\n            <div className=\"menu-fish\">\r\n                <div>\r\n                    <img src={image} alt={details.name} />\r\n                </div>\r\n                <div className=\"fish-name\">                    \r\n                        {details.name}\r\n                        <span className=\"price\"><span>$</span>{formatPrice(details.price)}</span>\r\n                </div>\r\n                <div className = \"fish-desc\">\r\n                    <p>{details.desc}</p>\r\n                </div>\r\n                <button onClick={() => addToOrder(keyIndex)} disabled={!isAvaliable}>{buttonText}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        //initial state\r\n        this.state = {\r\n            fishies: {},\r\n            order: {},\r\n            totalCount: 0\r\n        };\r\n\r\n        // this.addFish = this.addFish.bind(this);\r\n        // this.updateFish = this.updateFish.bind(this);\r\n        //this.loadSamples = this.loadSamples.bind(this);\r\n        this.addToOrder = this.addToOrder.bind(this);\r\n        this.removeFish = this.removeFish.bind(this);\r\n        this.removeOrder = this.removeOrder.bind(this);\r\n    }\r\n\r\n    //Lifecycle method\r\n    componentWillMount() {\r\n        this.loadSamples();\r\n\r\n        //using firebase to store and sync the data (fish states) for this store\r\n        //this.ref = base.syncState(`${this.props.match.params.storeId}/fishies`, { context: this, state: 'fishies' });\r\n\r\n        //check local storage contains orders\r\n        //const localOrderStorage = localStorage.getItem(`order-${this.props.match.params.storeId}`);\r\n\r\n        // if (localOrderStorage) {\r\n        //     //update order state\r\n        //     this.setState({ order: JSON.parse(localOrderStorage) });\r\n        // }\r\n    }\r\n\r\n    //stop sync with database when switching to another store\r\n    componentWillUnmount() {\r\n        //base.removeBinding(this.ref);\r\n    }\r\n\r\n    //Hooking into this method to set our local storage to maintain orders\r\n    componentWillUpdate(nextProps, nextState) {\r\n        //localStorage.setItem(`order-${this.props.match.params.storeId}`, JSON.stringify(nextState.order));\r\n    }\r\n\r\n    // addFish(fish) {\r\n    //     //clone state -- reason being for performance/avoiding accidently updating a couple of states causeing racing issues\r\n    //     const fishies = { ...this.state.fishies };\r\n    //     //using current timestamp as key for new fish\r\n    //     const timeStamp = Date.now();\r\n    //     fishies[`fishes-${timeStamp}`] = fish;\r\n    //     //set state\r\n    //     this.setState({ fishies });\r\n\r\n    // }\r\n\r\n    // updateFish(key, fish){\r\n    //     const fishies = {...this.state.fishies};\r\n    //     fishies[key] = fish;\r\n    //     this.setState({fishies});\r\n    // }\r\n\r\n    loadSamples = () => {\r\n        this.setState({\r\n            fishies: sampleFishes\r\n        });\r\n    }\r\n\r\n    addTotalCount = (amount) => {\r\n        this.setState({totalCount: amount})\r\n    }\r\n\r\n    addToOrder(key) {\r\n        //copy of state\r\n        const order = { ...this.state.order };\r\n        //update oe add new number of orderes\r\n        order[key] = order[key] + 1 || 1;\r\n        this.setState({ order });\r\n        this.setState({totalCount: this.state.totalCount+1})\r\n    }\r\n\r\n    removeFish(key){\r\n        const fishies = {...this.state.fishies};\r\n        \r\n        fishies[key] = null //delete fishies[key] does not work well with firebase using null instead\r\n        this.setState({fishies});        \r\n    }\r\n    \r\n    removeOrder(key){\r\n        const order = {...this.state.order};\r\n        const amountToRemove = order[key];\r\n        delete order[key];\r\n        \r\n        this.setState({order});\r\n        this.setState({totalCount: this.state.totalCount-amountToRemove})\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        \r\n        let fishList = Object.keys(this.state.fishies)\r\n            .map(key => <Fish key={key}\r\n                details={this.state.fishies[key]}\r\n                addToOrder={this.addToOrder}\r\n                keyIndex={key} />)\r\n\r\n        return (\r\n            <div className=\"menu\">\r\n                    <Header addTotalCount = {this.addTotalCount} totalCount = {this.state.totalCount} removeOrder = {this.removeOrder} fishies={this.state.fishies} order={this.state.order} tagline=\"Fresh Seafood Market\" />\r\n                    <div className=\"list-of-fish\">{fishList}</div>\r\n            </div>\r\n        )\r\n                // <Order removeOrder = {this.removeOrder} fishies={this.state.fishies} order={this.state.order} />\r\n                // <Inventory storeId = {this.props.match.params.storeId} removeFish = {this.removeFish} fishies={this.state.fishies} loadSamples={this.loadSamples} addFish={this.addFish} updateFish={this.updateFish}/>\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Miss, Switch } from 'react-router-dom';\r\nimport StorePicker from './components/StorePicker';\r\nimport App from './components/App';\r\nimport './css/style.css';\r\nimport NotFound from './components/NotFound';\r\n\r\n\r\n\r\nconst Main = () => {\r\n    \r\n    //for github pages\r\n    const repo = `/${window.location.pathname.split('/')[1]}`;\r\n    \r\n    return (\r\n        <BrowserRouter basename = {repo}>\r\n            <Switch>\r\n                <Route exact path='/' component={StorePicker} />\r\n                <Route path='/store/:storeId' component={App} />\r\n                <Route component={NotFound}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#main'));\r\n\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\n//registerServiceWorker();\r\n","module.exports = {\r\n  fish1: {\r\n    name: 'Pacific Halibut',\r\n    image: 'halibut.jpg',\r\n    desc: 'Everyones favorite white fish. We will cut it to the size you need and ship it.',\r\n    price: 1724,\r\n    status: 'available'\r\n  },\r\n\r\n  fish2: {\r\n    name: 'Lobster',\r\n    image: 'lobster.jpg',\r\n    desc: 'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\r\n    price: 3200,\r\n    status: 'available'\r\n  },\r\n\r\n  fish3: {\r\n    name: 'Sea Scallops',\r\n    image: 'scallops.jpg',\r\n    desc: 'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\r\n    price: 1684,\r\n    status: 'unavailable'\r\n  },\r\n\r\n  fish4: {\r\n    name: 'Mahi Mahi',\r\n    image: 'mahi.jpg',\r\n    desc: 'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\r\n    price: 1129,\r\n    status: 'available'\r\n  },\r\n\r\n  fish5: {\r\n    name: 'King Crab',\r\n    image: 'king crab.png',\r\n    desc: 'Crack these open and enjoy them plain or with one of our cocktail sauces',\r\n    price: 4234,\r\n    status: 'available'\r\n  },\r\n\r\n  fish6: {\r\n    name: 'Atlantic Salmon',\r\n    image: 'salmon.jpg',\r\n    desc: 'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\r\n    price: 1453,\r\n    status: 'available'\r\n  },\r\n\r\n  fish7: {\r\n    name: 'Oysters',\r\n    image: 'oyster.jpg',\r\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\r\n    price: 2543,\r\n    status: 'available'\r\n  },\r\n\r\n  fish8: {\r\n    name: 'Mussels',\r\n    image: 'mussels.jpg',\r\n    desc: 'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\r\n    price: 425,\r\n    status: 'available'\r\n  },\r\n\r\n  fish9: {\r\n    name: 'Jumbo Prawns',\r\n    image: 'prawns.jpg',\r\n    desc: 'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\r\n    price: 2250,\r\n    status: 'available'\r\n  }\r\n};\r\n"],"sourceRoot":""}